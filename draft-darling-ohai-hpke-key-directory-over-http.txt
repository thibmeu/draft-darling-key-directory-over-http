



???                                                           F. Darling
Internet-Draft                                                T. Meunier
Intended status: Informational                                 S. Newton
Expires: 4 August 2025                                   Cloudflare Inc.
                                                         31 January 2025


                        Key Directory over HTTP
         draft-darling-ohai-hpke-key-directory-over-http-latest

Abstract

   Service owners have a use to share public key as part of a standard
   directory.  This is meant to be convenient to share, allow for
   rotation, and be secure to man-in-the-middle or split-view attack.
   This document defines recommendations for protocol implementers.

   Notes: JWK does not offer a standard endpoint either with jose or
   cose.  It has a draft for HPKE [1]/[2].  There is an endpoint /.well-
   known/jwks.json that is tribal knowledge but is not registered with
   IANA.  Certificates could also be a similar mechanism, but there is
   x509 as well.  This directory might be bootstraped with x509 backed
   trust, but this is an overhead we don't touch.  I'm not confident in
   defining a jwk subset (all attributes [3]).

   [1] https://datatracker.ietf.org/doc/draft-ietf-jose-hpke-encrypt/
   [2] https://datatracker.ietf.org/doc/draft-ietf-cose-hpke/ [3]
   https://www.iana.org/assignments/jose/jose.xhtml

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://thibmeu.github.io/draft-darling-ohai-hpke-key-directory-over-
   http/draft-darling-ohai-hpke-key-directory-over-http.html.  Status
   information for this document may be found at
   https://datatracker.ietf.org/doc/draft-darling-ohai-hpke-key-
   directory-over-http/.

   Discussion of this document takes place on the ???  mailing list
   (mailto:httpapi@ietf.org), which is archived at
   https://mailarchive.ietf.org/arch/browse/httpapi/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/httpapi/.

   Source for this draft and an issue tracker can be found at
   https://github.com/thibmeu/draft-darling-ohai-hpke-key-directory-
   over-http.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 4 August 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  System
   4.  Security Considerations
   5.  IANA Considerations
   6.  Normative References
   Appendix A.  Use cases
     A.1.  DAP
     A.2.  OHTTP
     A.3.  Privacy Pass
     A.4.  Masque relay
   Acknowledgments
   Authors' Addresses

1.  Introduction

   TODO Introduction

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  System

   At a high level, keys are base64url encoded.  Endpoint is in JSON and
   CBOR, with a specific Content-Type but NOT a different endpoint.
   Consistency can be done with [1] Integration with key transparency
   [2] should be considered.  Rotation is done via HTTP headers.  A key
   is valid until this header expires, even though it's removed before.
   A key has a not-before in Unix timestamp, but DOES NOT have not-
   after.  Keys should . Key IDs MAY have pet names, but the actual IDs
   should be derived from the key data.  This allows to provide some
   guarantees over key uniqueness/version.  A key MUST NOT have a
   version.

   [1] https://datatracker.ietf.org/doc/draft-group-privacypass-
   consistency-mirror/ [2] https://datatracker.ietf.org/wg/keytrans/
   about/

4.  Security Considerations

   TODO Security

5.  IANA Considerations

   This document has no IANA actions.

6.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Appendix A.  Use cases

   See existing key directory on https://key-directory-over-
   http.research.cloudflare.com/

A.1.  DAP

   HpkeConfigList [1]

   HpkeConfig HpkeConfigList<0..2^16-1>;

   struct {
     HpkeConfigId id;
     HpkeKemId kem_id;
     HpkeKdfId kdf_id;
     HpkeAeadId aead_id;
     HpkePublicKey public_key;
   } HpkeConfig;

   opaque HpkePublicKey<0..2^16-1>;
   uint16 HpkeAeadId; /* Defined in [HPKE] */
   uint16 HpkeKemId;  /* Defined in [HPKE] */
   uint16 HpkeKdfId;  /* Defined in [HPKE] */

   Partially informed comments: * HpkeConfigId could be removed * Need
   not-before to handle early capture

   [1] https://datatracker.ietf.org/doc/html/draft-ietf-ppm-dap-
   13#section-4.5.1

A.2.  OHTTP

   Key Configutation [1]

   HPKE Symmetric Algorithms {
     HPKE KDF ID (16),
     HPKE AEAD ID (16),
   }

   Key Config {
     Key Identifier (8),
     HPKE KEM ID (16),
     HPKE Public Key (Npk * 8),
     HPKE Symmetric Algorithms Length (16) = 4..65532,
     HPKE Symmetric Algorithms (32) ...,
   }

   Partially informed comments: * Key Identifier could be removed/be
   deterministic * No mention of not-before * No mention of HTTP Caching
   for rotation

   [1] https://www.ietf.org/rfc/rfc9458.html#name-key-configuration

A.3.  Privacy Pass

   Issuer directory [1]

    {
       "issuer-request-uri": "https://issuer.example.net/request",
       "token-keys": [
         {
           "token-type": 2,
           "token-key": "MI...AB",
           "not-before": 1686913811,
         },
         {
           "token-type": 2,
           "token-key": "MI...AQ",
         }
       ]
    }

   Partially informed comments: * Not as flexible as HPKE * Has some
   protocol metadata (token-type, issuer-request-uri, rate-limit)

   [1] https://www.rfc-editor.org/rfc/rfc9578#name-configuration

A.4.  Masque relay

   ..

Acknowledgments

   TODO acknowledge.

Authors' Addresses

   Fisher Darling
   Cloudflare Inc.


   Thibault Meunier
   Cloudflare Inc.
   Email: ot-ietf@thibault.uk


   Simon Newton
   Cloudflare Inc.
   Email: rfc@simonnewton.com
